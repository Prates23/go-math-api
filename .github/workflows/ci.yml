name: CI Pipeline

on:
  push:
    branches:
      - master

jobs:
  build-test-docker:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/go-math-api

    outputs:
      SHORT_SHA: ${{ steps.vars.outputs.SHORT_SHA }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.20

      - name: Verify Go installation
        run: go version

      - name: Initialize Go module (if needed)
        run: |
          if [ ! -f go.mod ]; then
            go mod init go-math-api
          fi

      - name: Build the Go application
        run: CGO_ENABLED=0 go build -o main .

      - name: Run unit tests
        run: CGO_ENABLED=0 go test -v ./...

      - name: Get short SHA
        id: vars
        run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

        
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run:  docker build -t $IMAGE_NAME:${{ steps.vars.outputs.SHORT_SHA }} .

      - name: Push Docker image
        run: docker push $IMAGE_NAME:${{ steps.vars.outputs.SHORT_SHA }}

  scan-image:
    needs: build-test-docker
    runs-on: ubuntu-latest

    steps:
      - name: Install Trivy
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: image
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/go-math-api:${{ needs.build-test-docker.outputs.short_sha }}
          format: table
          exit-code: 0
          ignore-unfixed: true

  api-testing:
    needs: build-test-docker
    runs-on: ubuntu-latest

    steps:
      - name: Trigger API test workflow
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
          event-type: run-api-tests
          client-payload: '{"image": "${{ secrets.DOCKERHUB_USERNAME }}/go-math-api", "tag":"${{ needs.build-test-docker.outputs.short_sha }}"}'
  update-k8s-manifest:
    needs: build-test-docker
    runs-on: ubuntu-latest

    env:
      APP_NAME: go-math-api
      OVERLAY: dev
      IMAGE_TAG: ${{ needs.build-test-docker.outputs.short_sha }}

    steps:
      - name: Checkout k8s repo
        uses: actions/checkout@v3
        with:
          repository: Prates23/k8s-applications
          path: k8s-applications
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Confirm target file path
        run: |
          echo "Looking in deployments/$APP_NAME/overlays/$OVERLAY/"
          ls -l k8s-applications/deployments/$APP_NAME/overlays/$OVERLAY

      - name: Update image tag in deployment manifest
        run: |
          FILE="k8s-applications/deployments/$APP_NAME/overlays/$OVERLAY/deployment.yaml"
          echo "Updating image in $FILE to $IMAGE_TAG"

          sed -i "s|\(image: .*/$APP_NAME:\).*|\1${IMAGE_TAG##*:}|" "$FILE"

          echo "Updated manifest:"
          grep "image:" "$FILE"

      - name: Commit and push changes
        run: |
          cd k8s-applications
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add deployments/$APP_NAME/overlays/$OVERLAY/deployment.yaml
          git commit -m "Update $APP_NAME image tag to $IMAGE_TAG [CI]"
          git push
